AWSTemplateFormatVersion: '2010-09-09'
Description: 'My GraphQL application'
Resources:
  MyAppSyncAPI:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      AuthenticationType: API_KEY
      Name: MyApp
  MyDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !Ref MyAppSyncAPI
      Name: MyDataSource
      Type: LAMBDA
      LambdaConfig:
        LambdaFunctionArn: !GetAtt MyLambdaFunction.Arn
  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          const resolvers = {
            Query: {
              getComment: (root, args, context) => {
                // ...
              },
              getComments: (root, args, context) => {
                // ...
              }
            },
            Mutation: {
              addComment: (root, args, context) => {
                // ...
              },
              replyToComment: (root, args, context) => {
                // ...
              }
            }
          };

          exports.handler = async (event, context) => {
            const type = event.typeName;
            const field = event.fieldName;
            const resolver = resolvers[type][field];

            if (!resolver) {
              return {
                error: `Unable to resolve ${type}.${field}`
              };
            }

            return resolver(event.source, event.arguments, context);
          };
      FunctionName: MyLambdaFunction
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt MyLambdaRole.Arn
      Runtime: nodejs12.x
  MyLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: